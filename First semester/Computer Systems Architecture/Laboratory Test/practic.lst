     1                                  ; Sa se citeasca de la tastatura mai multe numere pana la citirea valorii 0. Sa se scrie intr-un fisier, separate de spatii, doar acele numere negative care au numar impar de biti 0 (cu valoarea 0).
     2                                  
     3                                  
     4                                  bits 32
     5                                  
     6                                  global start
     7                                  
     8                                  extern  exit, printf, scanf, fprintf, fopen, fclose
     9                                  import  exit msvcrt.dll
    10                                  import printf msvcrt.dll
    11                                  import scanf msvcrt.dll
    12                                  import fopen msvcrt.dll
    13                                  import fclose msvcrt.dll
    14                                  import fprintf msvcrt.dll
    15                                  
    16                                  segment  data use32 class=data
    17 00000000 <res 00000004>              x resd 1
    18 00000004 78203D2000                  mesaj_citire db "x = ", 0
    19 00000009 256400                      format db "%d", 0
    20 0000000C 707261637469632E74-         nume_fisier db "practic.txt", 0
    20 00000015 787400             
    21 00000018 6100                        mod_acces db "a", 0
    22 0000001A FFFFFFFF                    descriptor dd -1
    23                                      
    24 0000001E 0000                        biti_zero dw 0
    25                                      
    26                                  segment  code use32 class=code 
    27                                  start:
    28                                      ; se deschide fisierul in care vom scrie numerele
    29                                      ; eax = fopen(nume_fisier, mod_acces)
    30 00000000 68[18000000]                push dword mod_acces     
    31 00000005 68[0C000000]                push dword nume_fisier
    32 0000000A FF15[00000000]              call [fopen]
    33 00000010 83C408                      add esp, 4*2 
    34                                      
    35                                      ; verificam daca eax != 0
    36 00000013 83F800                      cmp eax, 0
    37 00000016 0F8498000000                je final
    38                                      
    39                                      ; daca nu a exitat nici o eroare, mutam valoarea din eax in variabila descriptor
    40 0000001C A3[1A000000]                mov [descriptor], eax 
    41                                  
    42                                      citire:
    43                                          ; se apeleaza functia printf(mesaj_citire) pentru a se afisa "x = "
    44 00000021 68[04000000]                    push dword mesaj_citire
    45 00000026 FF15[00000000]                  call [printf]
    46 0000002C 83C404                          add esp, 4*1
    47                                          
    48                                          ; se apeleaza functia scanf(format, x)
    49 0000002F 68[00000000]                    push dword x
    50 00000034 68[09000000]                    push dword format
    51 00000039 FF15[00000000]                  call [scanf]
    52 0000003F 83C408                          add esp, 4*2
    53                                          
    54                                          ; se pune 0 in fiecare registru
    55 00000042 B800000000                      mov eax, 0
    56 00000047 BB00000000                      mov ebx, 0
    57 0000004C B900000000                      mov ecx, 0
    58 00000051 BA00000000                      mov edx, 0
    59                                          
    60 00000056 8A1D[00000000]                  mov bl, [x]
    61                                          ; se verifica daca numarul citit este 0
    62 0000005C 80FB00                          cmp bl, 0
    63 0000005F 7453                            je final
    64                                          
    65                                          ; se verifica daca numarul este negativ
    66 00000061 80FB00                          cmp bl, 0
    67 00000064 73BB                            jae citire
    68                                          
    69                                          ; daca este negativ, se numara bitii egali cu 0
    70                                          ; se "roteste" numarul la dreapta pana acesta este egal cu 0
    71                                          parcurgere:
    72                                              ;mov bx, 0
    73 00000066 D0EB                                shr bl, 1
    74 00000068 7307                                jnc adunare ; daca cf = 0
    75                                              
    76 0000006A 80FB00                              cmp bl, 0
    77 0000006D 740C                                je salvare_numar
    78 0000006F EBF5                                jmp parcurgere
    79                                              
    80                                              adunare:
    81 00000071 668305[1E000000]01                      add word [biti_zero], 1
    82 00000079 EBEB                                    jmp parcurgere
    83                                          
    84                                          salvare_numar:
    85                                              ; se verifica paritatea lui biti_zero
    86 0000007B 66A1[1E000000]                        mov ax, word [biti_zero]
    87 00000081 F63502000000                          div byte [2]
    88                                                
    89 00000087 80FC00                                cmp ah, 0
    90 0000008A 7595                                  jne citire
    91                                                
    92 0000008C 66C705[1E000000]00-                   mov word[biti_zero], 0
    92 00000094 00                 
    93                                                
    94                                              ; se apeleaza functia fprintf
    95                                              ; fprintf(descriptor, format, x)
    96 00000095 FF35[00000000]                      push dword [x]
    97 0000009B 68[09000000]                        push dword format
    98 000000A0 FF35[1A000000]                      push dword [descriptor]
    99 000000A6 FF15[00000000]                      call [fprintf]
   100 000000AC 83C40C                              add esp, 4*3
   101 000000AF E96DFFFFFF                          jmp citire
   102                                  
   103                                  final:
   104                                      ; se inchide fisierul
   105 000000B4 FF35[1A000000]              push dword [descriptor]
   106 000000BA FF15[00000000]              call [fclose]
   107 000000C0 83C404                      add esp, 4
   108                                      
   109 000000C3 6A00                        push dword 0
   110 000000C5 FF15[00000000]              call [exit]
   111                                      
