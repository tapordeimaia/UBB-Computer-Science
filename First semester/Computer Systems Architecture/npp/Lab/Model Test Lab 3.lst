     1                                  ; Sa se scrie sirul de numere in baza doi intr-un alt fisier.
     2                                  bits 32 
     3                                  global start      
     4                                  extern exit  , fopen , fscanf  , fclose, fprintf          
     5                                  import exit msvcrt.dll
     6                                  import fopen msvcrt.dll  
     7                                  import fscanf msvcrt.dll  
     8                                  import fclose msvcrt.dll
     9                                  import fprintf msvcrt.dll
    10                                  segment data use32 class=data
    11 00000000 7200                        acces_mode db "r", 0
    12 00000002 6E756D626572734C69-         file_name db "numbersList.txt", 0
    12 0000000B 73742E74787400     
    13 00000012 00000000                    file_descriptor dd 0
    14 00000016 00000000                    buffer dd 0
    15 0000001A 256400                      reading_format db "%d", 0
    16 0000001D 00000000                    index_of_list dd 0
    17                                      numbers_list_length equ 10
    18 00000021 <res 00000028>              numbers_list resd numbers_list_length
    19 00000049 00000000                    numbers_counter dd 0
    20 0000004D 6F7574707574332E74-         output_file db "output3.txt", 0
    20 00000056 787400             
    21 00000059 7700                        writing_acces_mode db "w",0
    22 0000005B <res 00000021>              output_buffer resb 33
    23 0000007C 25732000                    space db "%s ", 0
    24                                  segment code use32 class=code
    25                                      start:
    26 00000000 68[00000000]                    push dword acces_mode
    27 00000005 68[02000000]                    push dword file_name
    28 0000000A FF15[00000000]                  call [fopen]
    29 00000010 83C408                          add esp, 4*2
    30                                          
    31 00000013 83F800                          cmp eax, 0
    32 00000016 0F84C7000000                    je final
    33                                          
    34 0000001C A3[12000000]                    mov [file_descriptor], eax
    35                                          
    36                                          reading_loop:
    37 00000021 68[16000000]                        push dword buffer
    38 00000026 68[1A000000]                        push dword reading_format
    39 0000002B FF35[12000000]                      push dword [file_descriptor]
    40 00000031 FF15[00000000]                      call [fscanf]
    41 00000037 83C40C                              add esp, 4*3
    42                                              
    43 0000003A 83F801                              cmp eax, 1
    44 0000003D 7522                                jne end_reading_loop
    45                                              
    46 0000003F 8B1D[1D000000]                      mov ebx, [index_of_list]
    47 00000045 A1[16000000]                        mov eax, [buffer]
    48 0000004A 89049D[21000000]                    mov [numbers_list + ebx*4], eax
    49 00000051 8305[1D000000]01                    add dword [index_of_list], 1
    50 00000058 8305[49000000]01                    add dword [numbers_counter], 1
    51                                              
    52 0000005F EBC0                                jmp reading_loop
    53                                              
    54                                          end_reading_loop:
    55 00000061 FF35[12000000]                      push dword [file_descriptor]
    56 00000067 FF15[00000000]                      call [fclose]
    57 0000006D 83C404                              add esp, 4
    58                                              
    59 00000070 68[59000000]                    push writing_acces_mode
    60 00000075 68[4D000000]                    push output_file
    61 0000007A FF15[00000000]                  call [fopen]
    62 00000080 83C408                          add esp, 4*2
    63                                          
    64 00000083 83F800                          cmp eax, 0
    65 00000086 745B                            je final
    66                                          
    67 00000088 A3[12000000]                    mov [file_descriptor], eax 
    68                                          
    69 0000008D BE[21000000]                    mov esi, numbers_list
    70                                          write_conversion_loop:
    71 00000092 AD                                  lodsd
    72 00000093 50                                  push eax
    73                                              
    74 00000094 BB20000000                          mov ebx, 32
    75                                              conversion_loop:
    76 00000099 4B                                      dec ebx
    77 0000009A D1E8                                    shr eax, 1
    78 0000009C 7209                                    jc set_one
    79 0000009E C683[5B000000]30                        mov byte[output_buffer+ebx], "0"
    80 000000A5 EB07                                    jmp check_end_conversion
    81                                                  set_one:
    82 000000A7 C683[5B000000]31                            mov byte[output_buffer+ebx], "1"
    83                                              check_end_conversion:
    84 000000AE 85DB                                    test ebx, ebx
    85 000000B0 75E7                                    jnz conversion_loop
    86                                                  
    87 000000B2 68[5B000000]                            push dword output_buffer
    88 000000B7 68[7C000000]                            push dword space
    89 000000BC FF35[12000000]                          push dword [file_descriptor]
    90 000000C2 FF15[00000000]                          call [fprintf]
    91 000000C8 83C408                                  add esp, 4*2
    92                                                  
    93 000000CB 58                                      pop eax
    94 000000CC FF0D[49000000]                          dec dword[numbers_counter]
    95 000000D2 75BE                                    jnz write_conversion_loop
    96                                          
    97 000000D4 FF35[12000000]                  push dword [file_descriptor]
    98 000000DA FF15[00000000]                  call [fclose]
    99 000000E0 83C404                          add esp, 4
   100                                  
   101                                      final:    
   102 000000E3 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   103 000000E5 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
